@using System.IO
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Routing
@using Microsoft.AspNetCore.Routing.Internal
@inject DfaGraphWriter GraphWriter
@inject CompositeEndpointDataSource DataSource
@inject JavaScriptEncoder JavaScriptEncoder


@{
    ViewData["Title"] = "Graphs'N'stuff";

    var writer = new StringWriter();
    GraphWriter.Write(DataSource, writer);

    var endpoints = DataSource.Endpoints;
}
<h1>https://github.com/rynowak/EndpointRoutingDemos - Index.cshtml</h1>
<div class="row">
    <h2>Your App's Endpoints</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Route</th>
                <th>Display Name</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < endpoints.Count; i++)
            {
                <tr>
                    <td>@GetRoute(endpoints[i])</td>
                    <td>@endpoints[i].DisplayName</td>
                </tr>
            }
        </tbody>
    </table>
</div>


<div class="row">
    <h2>Your App's Routing state machine</h2>
    <div id="graph-yo"></div>

    @* Shout outs to https://github.com/mdaines/viz.js !!!*@
    <script src="~/js/viz.js"></script>
    <script src="~/js/full.render.js"></script>
    <script type="text/javascript">
    let graph = "@JavaScriptEncoder.Encode(writer.ToString())";
    let viz = new Viz();

    viz.renderSVGElement(graph)
        .then(function (element) {
            document.getElementById('graph-yo').appendChild(element);
        })
        .catch(function (error) {
            console.error(error);
        })
    </script>
</div>
@functions {
    string GetRoute(Endpoint endpoint)
    {
        if (endpoint is RouteEndpoint routeEndpoint)
        {
            return "/" + routeEndpoint.RoutePattern.RawText;
        }

        return "n/a";
    }
}